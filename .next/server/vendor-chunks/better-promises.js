"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/better-promises";
exports.ids = ["vendor-chunks/better-promises"];
exports.modules = {

/***/ "(ssr)/../../node_modules/better-promises/dist/index.js":
/*!********************************************************!*\
  !*** ../../node_modules/better-promises/dist/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortablePromise: () => (/* binding */ m),\n/* harmony export */   CancelledError: () => (/* binding */ G),\n/* harmony export */   ManualPromise: () => (/* binding */ R),\n/* harmony export */   TimeoutError: () => (/* binding */ H),\n/* harmony export */   isCancelledError: () => (/* binding */ M),\n/* harmony export */   isPromiseResolveResult: () => (/* binding */ C),\n/* harmony export */   isTimeoutError: () => (/* binding */ N)\n/* harmony export */ });\nvar V = Object.defineProperty;\nvar Y = (r, t, e) => t in r ? V(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e;\nvar y = (r, t, e) => Y(r, typeof t != \"symbol\" ? t + \"\" : t, e);\nvar $ = Object.defineProperty, k = (r, t, e) => t in r ? $(r, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : r[t] = e, q = (r, t, e) => k(r, t + \"\", e);\nfunction z(r, t) {\n  return (e) => e instanceof r && e.type === t;\n}\nfunction P(r, t) {\n  t || (t = []);\n  const e = Symbol(r);\n  class c extends Error {\n    constructor(...s) {\n      const a = typeof t == \"function\" ? t(...s) : typeof t == \"string\" ? [t] : t || [];\n      super(...a), q(this, \"type\", e), this.name = r;\n    }\n  }\n  return Object.defineProperty(c, \"name\", { value: r }), [c, z(c, e)];\n}\nconst [G, M] = P(\"CancelledError\", \"Promise was canceled\"), [H, N] = P(\n  \"TimeoutError\",\n  (r, t) => [`Timeout reached: ${r}ms`, { cause: t }]\n), B = Symbol(\"Resolved\");\nfunction C(r) {\n  return Array.isArray(r) && r[0] === B;\n}\nfunction J(r) {\n  return [B, r];\n}\nfunction x(r, t) {\n  return r.reject = t.reject, r.abort = t.abort, r;\n}\nclass m extends Promise {\n  constructor(e, c) {\n    let o, s;\n    super((a, i) => {\n      let v, u;\n      typeof e == \"function\" ? (v = e, u = c) : u = e;\n      const d = [], j = (n) => (...h) => {\n        const p = n(...h);\n        return d.forEach((F) => F()), p;\n      }, g = new AbortController(), { signal: l } = g;\n      s = (n) => {\n        !l.aborted && g.abort(n);\n      };\n      const b = () => l.reason, w = (n) => {\n        const h = () => {\n          n(b());\n        };\n        l.addEventListener(\"abort\", h, !0);\n        const p = () => {\n          l.removeEventListener(\"abort\", h, !0);\n        };\n        return d.push(p), p;\n      }, D = j((n) => {\n        a(n), s(J(n));\n      });\n      o = j((n) => {\n        i(n), s(n);\n      }), u || (u = {});\n      const { abortSignal: f, rejectOnAbort: A = !0 } = u;\n      if (f)\n        if (f.aborted) {\n          const { reason: n } = f;\n          if (A)\n            return o(n);\n          s(n);\n        } else {\n          const n = () => {\n            s(f.reason);\n          };\n          f.addEventListener(\"abort\", n), d.push(() => {\n            f.removeEventListener(\"abort\", n);\n          });\n        }\n      A && w(i);\n      const { timeout: E } = u;\n      if (E) {\n        const n = setTimeout(() => {\n          s(new H(E));\n        }, E);\n        d.push(() => {\n          clearTimeout(n);\n        });\n      }\n      const L = () => l.aborted, S = () => C(b()), T = () => {\n        const n = b();\n        return C(n) ? n[1] : void 0;\n      };\n      try {\n        const n = v && v(D, o, {\n          abortReason: b,\n          abortSignal: l,\n          isAborted: L,\n          isResolved: S,\n          onAborted: w,\n          onResolved: (h) => w(() => {\n            S() && h(T());\n          }),\n          resolved: T,\n          throwIfAborted() {\n            if (L())\n              throw b();\n          }\n        });\n        n instanceof Promise && n.catch(o);\n      } catch (n) {\n        o(n);\n      }\n    });\n    /**\n     * Aborts the promise execution using the specified reason.\n     *\n     * Not that this method doesn't reject the promise but notifies the executor using its context.\n     * To perform the same operation but also reject the promise, use the `reject()` method.\n     * @param reason - abort reason.\n     * @see reject\n     */\n    y(this, \"abort\");\n    /**\n     * Rejects the initially created promise.\n     *\n     * This method not only aborts the signal passed to the executor, but also rejects the\n     * promise itself calling all chained listeners.\n     *\n     * The reason passed to the method is being passed as-is to the executor's context.\n     */\n    y(this, \"reject\");\n    this.abort = s, this.reject = o;\n  }\n  /**\n   * Creates a new AbortablePromise instance using an executor, resolving the promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static fn(e, c) {\n    return new m(async (o, s, a) => {\n      try {\n        o(await e(a));\n      } catch (i) {\n        s(i);\n      }\n    }, c);\n  }\n  static resolve(e) {\n    return this.fn(() => e);\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(e) {\n    return new m((c, o) => {\n      o(e);\n    });\n  }\n  /**\n   * Aborts the promise with the cancel error.\n   */\n  cancel() {\n    this.abort(new G());\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(e) {\n    return this.then(void 0, e);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(e) {\n    return x(super.finally(e), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(e, c) {\n    return x(super.then(e, c), this);\n  }\n}\nfunction I(r, t) {\n  return r.resolve = t.resolve, r;\n}\nclass R extends m {\n  constructor(e, c) {\n    let o, s;\n    typeof e == \"function\" ? (o = e, s = c) : s = e;\n    let a;\n    super((i, v, u) => {\n      a = i, o && o(i, v, u);\n    }, s);\n    /**\n     * Resolves the promise.\n     */\n    y(this, \"resolve\");\n    this.resolve = a;\n  }\n  /**\n   * Creates a new ManualPromise instance using an executor, resolving the promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static fn(e, c) {\n    return new R((o, s, a) => {\n      try {\n        Promise.resolve(e(a)).then(o, s);\n      } catch (i) {\n        s(i);\n      }\n    }, c);\n  }\n  static resolve(e) {\n    return this.fn(() => e);\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(e) {\n    return new R((c, o) => {\n      o(e);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(e) {\n    return this.then(void 0, e);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(e) {\n    return I(super.finally(e), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(e, c) {\n    return I(super.then(e, c), this);\n  }\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/better-promises/dist/index.js\n");

/***/ })

};
;